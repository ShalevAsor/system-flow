.react-flow {
  --bg-color: rgb(250, 250, 252);
  --text-color: rgb(33, 37, 41);
  --node-border-radius: 10px;
  --node-box-shadow: 10px 0 15px rgba(42, 138, 246, 0.2),
    -10px 0 15px rgba(233, 42, 103, 0.2);
  background-color: var(--bg-color);
  color: var(--text-color);
}

/* Target all of your custom nodes with these styles */
.react-flow__node {
  border-radius: var(--node-border-radius);
  display: flex;
  min-height: 70px;
  min-width: 150px;
  max-width: 300px;
  max-height: 200px;
  font-family: "Fira Mono", Monospace, system-ui;
  font-weight: 500;
  letter-spacing: -0.2px;
  box-shadow: var(--node-box-shadow);
}

/* Apply styles to each of your node types */
.react-flow__node-client,
.react-flow__node-server,
.react-flow__node-database,
.react-flow__node-loadbalancer,
.react-flow__node-cache {
  border-radius: var(--node-border-radius);
  display: flex;
  height: 70px;
  min-width: 150px;
  font-family: "Fira Mono", Monospace, system-ui;
  font-weight: 500;
  letter-spacing: -0.2px;
  box-shadow: var(--node-box-shadow);
}

.react-flow__node .wrapper {
  overflow: hidden;
  display: flex;
  padding: 2px;
  position: relative;
  border-radius: var(--node-border-radius);
  flex-grow: 1;
}

.gradient:before {
  content: "";
  position: absolute;
  padding-bottom: calc(100% * 1.41421356237);
  width: calc(100% * 1.41421356237);
  background: conic-gradient(
    from -160deg at 50% 50%,
    #e92a67 0deg,
    #a853ba 120deg,
    #2a8af6 240deg,
    #e92a67 360deg
  );
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  border-radius: 100%;
  opacity: 0.8; /* Slightly reduced opacity for light theme */
}

.react-flow__node.selected .wrapper.gradient:before {
  content: "";
  background: conic-gradient(
    from -160deg at 50% 50%,
    #e92a67 0deg,
    #a853ba 120deg,
    #2a8af6 240deg,
    rgba(42, 138, 246, 0) 360deg
  );
  animation: spinner 4s linear infinite;
  transform: translate(-50%, -50%) rotate(0deg);
  z-index: -1;
}

@keyframes spinner {
  100% {
    transform: translate(-50%, -50%) rotate(-360deg);
  }
}

.react-flow__node .inner {
  background: var(--bg-color);
  padding: 16px 20px;
  border-radius: var(--node-border-radius);
  display: flex;
  flex-direction: column;
  justify-content: center;
  flex-grow: 1;
  position: relative;
  width: 100%;
}

.react-flow__node .icon {
  margin-right: 8px;
  color: #444;
}

.react-flow__node .body {
  display: flex;
}

.react-flow__node .title {
  font-size: 16px;
  margin-bottom: 2px;
  line-height: 1;
  color: #333;
}

.react-flow__node .subtitle {
  font-size: 12px;
  color: #666;
  word-wrap: break-word;
  overflow-wrap: break-word;
  white-space: normal;
  max-width: 100%;
}

.react-flow__node .cloud {
  border-radius: 100%;
  width: 30px;
  height: 30px;
  right: 0;
  position: absolute;
  top: 0;
  transform: translate(50%, -50%);
  display: flex;
  transform-origin: center center;
  padding: 2px;
  overflow: hidden;
  box-shadow: var(--node-box-shadow);
  z-index: 1;
}

.react-flow__node .cloud div {
  background-color: var(--bg-color);
  flex-grow: 1;
  border-radius: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  color: #555;
}

/* Make handles visible during connection attempts */
.react-flow__handle {
  opacity: 0;
  transition: opacity 0.3s;
  width: 10px !important;
  height: 10px !important;
  background-color: white;
  border: 2px solid #2a8af6;
}

.react-flow__handle.source {
  bottom: -10px;
  right: 50%;
  transform: translateX(50%);
  border-color: #e92a67;
}

.react-flow__handle.target {
  top: -10px;
  right: 50%;
  transform: translateX(50%);
  border-color: #2a8af6;
}

/* Show handles when node is selected or when hovering */
.react-flow__node.selected .react-flow__handle,
.react-flow__node:hover .react-flow__handle {
  opacity: 0.8;
}

/* Show handles more clearly when connection is being created */
.react-flow__handle.connecting {
  opacity: 1 !important;
}

/* Make handles fully visible during a connection drag operation */
.react-flow.react-flow--connecting .react-flow__handle {
  opacity: 1;
}

.react-flow__node:focus {
  outline: none;
}

.react-flow__edge .react-flow__edge-path {
  stroke: url(#edge-gradient);
  stroke-width: 2;
  stroke-opacity: 0.75;
}

.react-flow__controls button {
  background-color: white;
  color: #333;
  border: 1px solid #ccc;
  border-bottom: none;
}

.react-flow__controls button:hover {
  background-color: #f5f5f5;
}

.react-flow__controls button:first-child {
  border-radius: 5px 5px 0 0;
}

.react-flow__controls button:last-child {
  border-bottom: 1px solid #ccc;
  border-radius: 0 0 5px 5px;
}

.react-flow__controls button path {
  fill: #555;
}

.react-flow__attribution {
  background: rgba(245, 245, 245, 0.8);
}

.react-flow__attribution a {
  color: #2a8af6;
}

/* Also update the minimap for light theme */
.react-flow__minimap {
  background-color: rgba(255, 255, 255, 0.9);
}

.react-flow__minimap-mask {
  fill: rgba(200, 200, 200, 0.3);
}
/* Metrics container and badges */
.react-flow__node .metrics-container {
  display: flex;
  position: absolute;
  bottom: 2px;
  left: 2px;
  gap: 5px;
}

.react-flow__node .metric-badge {
  display: flex;
  align-items: center;
  gap: 3px;
  padding: 1px 5px;
  border-radius: 10px;
  font-size: 9px;
  font-weight: 500;
  color: white;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
}

/* Color variations instead of semantic names */
.react-flow__node .metric-badge.color-blue {
  background: linear-gradient(45deg, #2a8af6, #4361ee);
}

.react-flow__node .metric-badge.color-purple {
  background: linear-gradient(45deg, #a853ba, #8338ec);
}

.react-flow__node .metric-badge.color-red {
  background: linear-gradient(45deg, #f72585, #ff4d6d);
}

.react-flow__node .metric-badge.color-green {
  background: linear-gradient(45deg, #06d6a0, #1b9aaa);
}

.react-flow__node .metric-badge.color-orange {
  background: linear-gradient(45deg, #f8961e, #f9c74f);
}

.react-flow__node .metric-badge.color-teal {
  background: linear-gradient(45deg, #4cc9f0, #4895ef);
}
/* Adjust inner padding to make room for badges */
.react-flow__node .inner {
  padding: 16px 20px 20px 20px;
}
